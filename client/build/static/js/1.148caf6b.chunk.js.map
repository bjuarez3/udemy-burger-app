{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_css__WEBPACK_IMPORTED_MODULE_1__","_Input_css__WEBPACK_IMPORTED_MODULE_1___default","input","props","inputElement","inputClasses","classes","InputElement","invalid","shouldValidate","touched","push","Invalid","inputtype","a","createElement","Object","assign","className","join","elementConfig","value","onChange","changed","Input","classzname","Label","label","module","exports","CheckoutSummary","ContactData","checkoutSummary","console","log","react_default","style","width","margin","Burger","ingredients","Button","btnType","clicked","checkoutCancelled","checkoutContinued","state","orderForm","name","elementType","type","placeholder","validation","required","valid","email","minLength","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","_this","order","objectSpread","ings","price","customer","userid","userId","onOrderBurger","token","inputChangedHandler","inputIdentifier","updatedFormElement","updateObject","target","checkValidity","updatedOrderForm","defineProperty","setState","render","formElementsArray","key","id","config","form","onSubmit","map","formElement","disabled","loading","Spinner","Component","connect","burgerBuilder","totalPrice","auth","dispatch","orderData","actions","withErrorHandler","axios","Checkout","checkoutCancelledHandler","history","goBack","checkoutContinuedHandler","replace","summary","Redirect","to","purchased","purchasedRedirect","CheckoutSummary_CheckoutSummary","Route","path","match","component"],"mappings":"0FAAA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAAAI,EAAAJ,EAAAE,EAAAC,GA4CeE,IAxCD,SAACC,GACX,IAAIC,EAAe,KACbC,EAAe,CAACC,IAAQC,cAM9B,OAJGJ,EAAMK,SAAWL,EAAMM,gBAAkBN,EAAMO,SAC9CL,EAAaM,KAAKL,IAAQM,SAGvBT,EAAMU,WACT,IAAK,QACDT,EAAeN,EAAAgB,EAAAC,cAAA,QAAAC,OAAAC,OAAA,CACCC,UAAab,EAAac,KAAK,MAC3BhB,EAAMiB,cAFX,CAGCC,MAASlB,EAAMkB,MACfC,SAAYnB,EAAMoB,WAClC,MACJ,IAAK,WACDnB,EAAeN,EAAAgB,EAAAC,cAAA,WAAAC,OAAAC,OAAA,CACCC,UAAab,EAAac,KAAK,MAC3BhB,EAAMiB,cAFX,CAGCC,MAASlB,EAAMkB,MACfC,SAAYnB,EAAMoB,WAClC,MACJ,QACInB,EAAeN,EAAAgB,EAAAC,cAAA,QAAAC,OAAAC,OAAA,CACCC,UAAab,EAAac,KAAK,MAC3BhB,EAAMiB,cAFX,CAGCC,MAASlB,EAAMkB,MACfC,SAAYnB,EAAMoB,WAG1C,OACIzB,EAAAgB,EAAAC,cAAA,OAAKG,UAAaZ,IAAQkB,OACtB1B,EAAAgB,EAAAC,cAAA,SAAOU,WAAcnB,IAAQoB,OAAQvB,EAAMwB,OAC1CvB,yBCrCbwB,EAAAC,QAAA,CAAkBL,MAAA,sBAAAE,MAAA,sBAAAnB,aAAA,6BAAAK,QAAA,8CCAlBgB,EAAAC,QAAA,CAAkBC,gBAAA,gECAlBF,EAAAC,QAAA,CAAkBE,YAAA,+KC0BHC,EApBS,SAAC7B,GAErB,OADA8B,QAAQC,IAAI,mBAERC,EAAArB,EAAAC,cAAA,OAAKG,UAAaZ,IAAQwB,iBACtBK,EAAArB,EAAAC,cAAA,qCACAoB,EAAArB,EAAAC,cAAA,OAAKqB,MAAS,CAACC,MAAO,OAAQC,OAAQ,SAClCH,EAAArB,EAAAC,cAACwB,EAAA,EAAD,CAAQC,YAAerC,EAAMqC,eAEjCL,EAAArB,EAAAC,cAAC0B,EAAA,EAAD,CACIC,QAAU,SACVC,QAAWxC,EAAMyC,mBAFrB,UAIAT,EAAArB,EAAAC,cAAC0B,EAAA,EAAD,CACIC,QAAU,UACVC,QAAWxC,EAAM0C,mBAFrB,wGCJNd,6MACFe,MAAQ,CACJC,UAAW,CACPC,KAAM,CACFC,YAAa,QACb7B,cAAe,CACX8B,KAAM,OACNC,YAAa,aAEjB9B,MAAO,GACP+B,WAAY,CACRC,UAAU,GAEdC,OAAO,EACP5C,SAAS,GAEb6C,MAAO,CACHN,YAAa,QACb7B,cAAe,CACX8B,KAAM,OACNC,YAAa,cAEjB9B,MAAO,GACP+B,WAAY,CACRC,UAAU,EACVG,UAAW,GAEfF,OAAO,EACP5C,SAAS,IAGjB+C,aAAa,KAGjBC,aAAe,SAACC,GACZA,EAAMC,iBACN,IAAMC,EAAW,GACjB,IAAK,IAAIC,KAAyBC,EAAKjB,MAAMC,UACzCc,EAASC,GAAyBC,EAAKjB,MAAMC,UAAUe,GAAuBzC,MAElF,IAAM2C,EAAKhD,OAAAiD,EAAA,EAAAjD,CAAA,GACJ+C,EAAK5D,MAAM+D,KADP,CAEPC,MAAOJ,EAAK5D,MAAMgE,MAClBC,SAAUP,EACVQ,OAAQN,EAAK5D,MAAMmE,SAEvBP,EAAK5D,MAAMoE,cAAcP,EAAOD,EAAK5D,MAAMqE,UAG/CC,oBAAsB,SAACd,EAAOe,GAE1B,IAAMC,EAAqBC,YAAab,EAAKjB,MAAMC,UAAU2B,GAAkB,CAC3ErD,MAAOsC,EAAMkB,OAAOxD,MACpBiC,MAAOwB,YAAcnB,EAAMkB,OAAOxD,MAAO0C,EAAKjB,MAAMC,UAAU2B,GAAiBtB,YAC/E1C,SAAS,IAEPqE,EAAmBH,YAAab,EAAKjB,MAAMC,UAAZ/B,OAAAgE,EAAA,EAAAhE,CAAA,GAChC0D,EAAkBC,IAGnBlB,GAAc,EAClB,IAAI,IAAIiB,KAAmBK,EACvBtB,EAAcsB,EAAiBL,GAAiBpB,OAASG,EAE7DM,EAAKkB,SAAS,CAAClC,UAAYgC,EAAkBtB,YAAaA,OAG9DyB,OAAS,WACL,IAAMC,EAAoB,GAC1B,IAAI,IAAIC,KAAOrB,EAAKjB,MAAMC,UACtBoC,EAAkBxE,KAAK,CACnB0E,GAAID,EACJE,OAAQvB,EAAKjB,MAAMC,UAAUqC,KAGrC,IAAIG,EACApD,EAAArB,EAAAC,cAAA,QAAMyE,SAAYzB,EAAKL,cAClByB,EAAkBM,IAAI,SAAAC,GAAW,OAC9BvD,EAAArB,EAAAC,cAACS,EAAA,EAAD,CACI4D,IAAOM,EAAYL,GACnBpC,YAAeyC,EAAYJ,OAAOrC,YAClC7B,cAAiBsE,EAAYJ,OAAOlE,cACpCC,MAASqE,EAAYJ,OAAOjE,MAC5Bb,SAAYkF,EAAYJ,OAAOhC,MAC/B7C,eAAkBiF,EAAYJ,OAAOlC,WACrC1C,QAAWgF,EAAYJ,OAAO5E,QAC9Ba,QAAW,SAACoC,GAAD,OAAWI,EAAKU,oBAAoBd,EAAO+B,EAAYL,SAC1ElD,EAAArB,EAAAC,cAAC0B,EAAA,EAAD,CAAQC,QAAU,UAAUiD,UAAa5B,EAAKjB,MAAMW,aAApD,UAMR,OAHGM,EAAK5D,MAAMyF,UACVL,EAAOpD,EAAArB,EAAAC,cAAC8E,EAAA,EAAD,OAGP1D,EAAArB,EAAAC,cAAA,OAAKG,UAAaZ,IAAQyB,aACtBI,EAAArB,EAAAC,cAAA,qCACCwE,iCAhGSO,aAsHXC,cAhBS,SAAAjD,GACpB,MAAO,CACHoB,KAAMpB,EAAMkD,cAAcxD,YAC1B2B,MAAOrB,EAAMkD,cAAcC,WAC3BL,QAAS9C,EAAMkB,MAAM4B,QACrBpB,MAAO1B,EAAMoD,KAAK1B,MAClBF,OAAQxB,EAAMoD,KAAK5B,SAIA,SAAA6B,GACvB,MAAO,CACH5B,cAAe,SAAC6B,EAAW5B,GAAZ,OAAsB2B,EAASE,IAAuBD,EAAW5B,OAIzEuB,CAA6CO,YAAiBvE,EAAawE,MC7HpFC,6MAEFC,yBAA2B,WACvB1C,EAAK5D,MAAMuG,QAAQC,YAGvBC,yBAA2B,WACvB3E,QAAQC,IAAI,uBACZ6B,EAAK5D,MAAMuG,QAAQG,QAAQ,6BAG/B3B,OAAS,WACLjD,QAAQC,IAAI,YACZ,IAAI4E,EAAU3E,EAAArB,EAAAC,cAACgG,EAAA,EAAD,CAAUC,GAAK,MAC7B,GAAGjD,EAAK5D,MAAM+D,KAAK,CACfjC,QAAQC,IAAI6B,EAAK5D,MAAM8G,WACvB,IAAMC,EAAoBnD,EAAK5D,MAAM8G,UAAY9E,EAAArB,EAAAC,cAACgG,EAAA,EAAD,CAAUC,GAAK,MAAS,KACzEF,EACI3E,EAAArB,EAAAC,cAAA,WACKmG,EACD/E,EAAArB,EAAAC,cAACoG,EAAD,CACI3E,YAAeuB,EAAK5D,MAAM+D,KAC1BtB,kBAAqBmB,EAAK0C,yBAC1B5D,kBAAqBkB,EAAK6C,2BAC9BzE,EAAArB,EAAAC,cAACqG,EAAA,EAAD,CAAOC,KAAQtD,EAAK5D,MAAMmH,MAAMD,KAAO,gBACnCE,UAAaxF,KAI7B,OAAO+E,gCA7BQhB,aAyCRC,sBARS,SAAAjD,GACpB,MAAM,CACFoB,KAAMpB,EAAMkD,cAAcxD,YAC1ByE,UAAWnE,EAAMkB,MAAMiD,YAKhBlB,CAAyBS","file":"static/js/1.148caf6b.chunk.js","sourcesContent":["import React from 'react'\n\nimport classes from './Input.css'\n\nconst input = (props) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement]\n\n    if(props.invalid && props.shouldValidate && props.touched){\n        inputClasses.push(classes.Invalid)\n    }\n\n    switch(props.inputtype) {\n        case('input') : \n            inputElement = <input \n                            className = {inputClasses.join(' ')} \n                            {...props.elementConfig} \n                            value = {props.value}\n                            onChange = {props.changed}/>\n            break\n        case('textarea') : \n            inputElement = <textarea \n                            className = {inputClasses.join(' ')} \n                            {...props.elementConfig} \n                            value = {props.value}\n                            onChange = {props.changed}/>\n            break\n        default: \n            inputElement = <input \n                            className = {inputClasses.join(' ')} \n                            {...props.elementConfig} \n                            value = {props.value}\n                            onChange = {props.changed}/>\n        \n    }\n    return (\n        <div className = {classes.Input}>\n            <label classzname = {classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    )\n    \n}\n\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__s67N0\",\"Label\":\"Input__Label___n-1m\",\"InputElement\":\"Input__InputElement__2-aFx\",\"Invalid\":\"Input__Invalid__1sl1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary__1xBm4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData__ContactData__1J81r\"};","import React from 'react';\n\nimport Burger from '../../Burger/Burger'\nimport Button from '../../UI/Button/Button'\n\nimport classes from './CheckoutSummary.css'\n\nconst checkoutSummary = (props) => {\n    console.log('checkoutSummary')\n    return (\n        <div className = {classes.CheckoutSummary}>\n            <h1>We hope it tastes good!</h1>\n            <div style = {{width: '100%', margin: 'auto'}}>\n                <Burger ingredients = {props.ingredients}/>\n            </div>\n            <Button \n                btnType = \"Danger\"\n                clicked = {props.checkoutCancelled}\n            >CANCEL</Button>\n            <Button \n                btnType = \"Success\"\n                clicked = {props.checkoutContinued}\n            >Continue</Button>\n        </div>\n    )\n}\n\nexport default checkoutSummary;","import React, { Component } from 'react'\nimport axios from '../../../axios-orders'\n\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner'\nimport classes from './ContactData.css'\nimport Input from '../../../components/UI/Input/Input'\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler'\n\nimport * as actions from '../../../store/actions/index'\n\nimport {connect} from 'react-redux'\nimport {updateObject, checkValidity} from '../../../shared/utility'\n// import input from '../../../components/UI/Input/Input';\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Email'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5\n                },\n                valid: false,\n                touched: false\n            }\n        },\n        formIsValid: false\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n        const formData = {}\n        for (let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value\n        }\n        const order = {\n            ...this.props.ings,\n            price: this.props.price,\n            customer: formData,\n            userid: this.props.userId\n        }\n        this.props.onOrderBurger(order, this.props.token)\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n\n        const updatedFormElement = updateObject(this.state.orderForm[inputIdentifier], {\n            value: event.target.value,\n            valid: checkValidity(event.target.value, this.state.orderForm[inputIdentifier].validation),\n            touched: true\n        });\n        const updatedOrderForm = updateObject(this.state.orderForm, {\n            [inputIdentifier]: updatedFormElement\n        });\n\n        let formIsValid = true;\n        for(let inputIdentifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid\n        }\n        this.setState({orderForm : updatedOrderForm, formIsValid: formIsValid})\n    }\n\n    render = () => {\n        const formElementsArray = []\n        for(let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            })\n        }\n        let form = (\n            <form onSubmit = {this.orderHandler}>\n                {formElementsArray.map(formElement => (\n                    <Input \n                        key = {formElement.id}\n                        elementType = {formElement.config.elementType}\n                        elementConfig = {formElement.config.elementConfig}\n                        value = {formElement.config.value}\n                        invalid = {!formElement.config.valid}\n                        shouldValidate = {formElement.config.validation}\n                        touched = {formElement.config.touched}\n                        changed = {(event) => this.inputChangedHandler(event, formElement.id)}/>))}\n                <Button btnType = \"Success\" disabled = {!this.state.formIsValid}>ORDER</Button>\n            </form>\n        );\n        if(this.props.loading) {\n            form = <Spinner />\n        }\n        return (\n            <div className = {classes.ContactData}>\n                <h4>Enter your contact data</h4>\n                {form}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\n    }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, {Component} from 'react'\nimport { Route, Redirect} from 'react-router-dom'\n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary'\nimport ContactData from './ContactData/ContactData'\n\nimport {connect} from 'react-redux'\n\nclass Checkout extends Component {\n\n    checkoutCancelledHandler = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinuedHandler = () => {\n        console.log('checkout continuted')\n        this.props.history.replace('/checkout/contact-data')\n    }\n\n    render = () => {\n        console.log('checkout')\n        let summary = <Redirect to = \"/\" />\n        if(this.props.ings){\n            console.log(this.props.purchased)\n            const purchasedRedirect = this.props.purchased ? <Redirect to = \"/\" /> : null\n            summary = (\n                <div>\n                    {purchasedRedirect}\n                    <CheckoutSummary \n                        ingredients = {this.props.ings}\n                        checkoutCancelled = {this.checkoutCancelledHandler}\n                        checkoutContinued = {this.checkoutContinuedHandler}/>\n                    <Route path = {this.props.match.path + '/contact-data'} \n                        component = {ContactData}/>\n                </div>\n            )\n        }\n        return summary\n    }\n}\n\nconst mapStateToProps = state => {\n    return{\n        ings: state.burgerBuilder.ingredients,\n        purchased: state.order.purchased\n    }\n}\n\n\nexport default connect(mapStateToProps)(Checkout); "],"sourceRoot":""}