{"version":3,"sources":["components/Order/Order.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","order","props","ingredients","ingredient","push","name","amount","ingredientOutput","map","ig","react_default","a","createElement","style","textTransform","display","margin","border","padding","key","className","classes","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","userId","token","orders","Spinner","loading","Order_Order","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,MAAA,0IC6BHC,EA1BD,SAACC,GACX,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAcF,EAAMC,YACzBA,EAAYE,KAAK,CAACC,KAAMF,EACpBG,OAAQL,EAAMC,YAAYC,KAIlC,IAAMI,EAAmBL,EAAYM,IAAI,SAAAC,GACrC,OAAOC,EAAAC,EAAAC,cAAA,QACHC,MAAS,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEbC,IAAOV,EAAGJ,MAAOI,EAAGJ,KARjB,KAQyBI,EAAGH,OAR5B,OAWX,OAAQI,EAAAC,EAAAC,cAAA,OAAKQ,UAAaC,IAAQtB,OACtBW,EAAAC,EAAAC,cAAA,yBAAiBL,GACjBG,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,qBAAaU,OAAOC,WAAWtB,EAAMuB,OAAOC,QAAQ,+CCfxEC,8LAGEC,KAAK1B,MAAM2B,cAAcD,KAAK1B,MAAM4B,OAAQF,KAAK1B,MAAM6B,wCAIvD,IAAIC,EAASrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,MASb,OARIL,KAAK1B,MAAMgC,UACXF,EAASJ,KAAK1B,MAAM8B,OAAOvB,IAAI,SAAAR,GAAK,OAChCU,EAAAC,EAAAC,cAACsB,EAAD,CACIf,IAAOnB,EAAMmC,GACbjC,YAAeF,EAAME,YACrBsB,MAASxB,EAAMwB,WAIvBd,EAAAC,EAAAC,cAAA,WACKmB,UAlBIK,aAuCNC,sBAfS,SAAAC,GACpB,MAAO,CACHP,OAAQO,EAAMtC,MAAM+B,OACpBE,QAASK,EAAMtC,MAAMiC,QACrBH,MAAOQ,EAAMC,KAAKT,MAClBD,OAAQS,EAAMC,KAAKV,SAIA,SAAAW,GACvB,MAAO,CACHZ,cAAe,SAACC,EAAQC,GAAT,OAAmBU,EAASC,IAAoBZ,EAAQC,OAIhEO,CAA6CK,YAAiBhB,EAAQiB","file":"static/js/2.bf891333.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__4yi4Z\"};","import React from 'react'\n\nimport classes from './Order.css'\n\nconst order = (props) => {\n    const ingredients = []\n    for (let ingredient in props.ingredients) {\n        ingredients.push({name: ingredient,\n            amount: props.ingredients[ingredient]\n        })\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span\n            style = {{\n                textTransform: 'capitalize',\n                display: 'inline-block',\n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px'\n            }}\n            key = {ig.name}>{ig.name} ({ig.amount})</span>\n    })\n\n    return  <div className = {classes.Order}>\n                <p>Ingredients: {ingredientOutput}</p>\n                <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\n            </div>\n}\n\nexport default order;","import React, {Component} from 'react';\n\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\nimport * as actions from '../../store/actions/index'\nimport {connect} from 'react-redux'\n\nimport Spinner from '../../components/UI/Spinner/Spinner'\n\nclass Orders extends Component {\n\n    componentDidMount() {\n        this.props.onFetchOrders(this.props.userId, this.props.token)\n    }\n\n    render() {\n        let orders = <Spinner />\n        if(!this.props.loading){\n            orders = this.props.orders.map(order => (\n                <Order \n                    key = {order.id} \n                    ingredients = {order.ingredients}\n                    price = {order.price} />\n            ))\n        }\n        return(\n            <div>\n                {orders}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (userId, token) => dispatch(actions.fetchOrders(userId, token))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));"],"sourceRoot":""}